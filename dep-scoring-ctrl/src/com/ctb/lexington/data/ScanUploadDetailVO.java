package com.ctb.lexington.data;

import java.util.Collection;
import java.util.Date;
import java.util.Iterator;

/**
 * <p>Title: ScanUploadDetailVO</p>
 * <p>Description: holds upload-level metadata and
 * associated upload file data from a scan file
 * generated by the RSU.</p>
 * <p>Copyright: Copyright (c) 2003</p>
 * <p>Company: CTB/McGraw-Hill</p>
 * @author Nate Cohen
 * @version 1.0
 */

public class ScanUploadDetailVO extends ScanUploadVO implements Comparable{

    public  static final String VO_LABEL       = "com.ctb.lexington.data.ScanUploadDetailVO";
    public  static final String VO_ARRAY_LABEL = VO_LABEL + ".array";

    public ScanUploadDetailVO() {
    }
    private java.util.Collection scanFiles;
    public java.util.Collection getScanFiles() {
        return scanFiles;
    }
    public void setScanFiles(java.util.Collection scanFiles_) {
        this.scanFiles = new java.util.ArrayList();
        Iterator it = scanFiles_.iterator();
        while(it.hasNext()) {
            this.scanFiles.add(it.next());
        }
    }
    public boolean equals(Object object){
    	boolean isEqual = false;
    	try{
    		ScanUploadDetailVO sud = (ScanUploadDetailVO) object;
    		if(super.equals(sud)){
				Collection sudsf = sud.getScanFiles();
				if(scanFiles == null){
					if(sudsf == null) {
						isEqual = true;
					}
				}
				else{ // compare collections
    			    boolean stillEqual = true;
     				Iterator sfIt = scanFiles.iterator();
     				Iterator sudsfIt = sudsf.iterator();
    				while (sfIt.hasNext() && stillEqual){
    					ScanFileVO sf = (ScanFileVO)sfIt.next();
    					ScanFileVO sfsf = (ScanFileVO)sudsfIt.next();
    					if(!sf.equals(sfsf)){
							stillEqual = false;
    					}
    				}
					if(stillEqual){
						isEqual = true;
					}
    			}
    		}
    	}
    	catch (Exception e){
    	}
    	return isEqual;
    }

	public int compareTo(Object o) {
		ScanUploadDetailVO other = (ScanUploadDetailVO) o;
		Date leftDate = getUploadDate();
		Date rightDate = other.getUploadDate();
		if (leftDate.after(rightDate)) return -1;
		if (leftDate.before(rightDate)) return +1;
		else return 0;
	}

}